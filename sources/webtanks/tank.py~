import math
from django.http import HttpResponse
from .bullet import bullet
import xml.etree.ElementTree as ET
import json

class tank(bullet):
	def __init__(self, X, Y):
		#X and Y are initial coordinates of tank
		#self.X and self.Y are coordinates of left and upper point of tank 
		self.X = X
		self.Y = Y
		#self.Xd and self.Yd are coordinates of right and lower point of tank
		self.Xd = X + 24
		self.Yd = Y + 24	
		self.flag = 0
		self.arrbullet = []

	def flight(self, request, Xtanks, Ytanks):
		if request.method == 'POST':
			POST = request.POST  
		return self.arrbullet[int(POST['name'])].flight(Xtanks, Ytanks, 0)
	
	def left(self):
		self.X = self.X - 5
		self.Xd = self.Xd - 5
		self.flag = 1
	
	def right(self):
		self.X = self.X + 5
		self.Xd = self.Xd + 5
		self.flag = 2

	def down(self):	
		self.Y = self.Y + 5
		self.Yd = self.Yd + 5
		self.flag = 3

	def up(self):
		self.Y = self.Y - 5
		self.Yd = self.Yd - 5
		self.flag = 4

	#receiving information from server about pressing keys
	def treating(self, request):	
		arr = [0, 0, 0, 0, 0, 0, 0]
		if request.method == 'POST':
			POST = request.POST  
			if POST['name'] == '1':
				if(self.search_walls(1) == 1):
					self.left()
					arr[0] = 1
					arr[1] = self.X
					arr[2] = self.Y
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
				else:
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
			if POST['name'] == '2':
				if(self.search_walls(2) == 1):
					self.right()
					arr[0] = 1
					arr[1] = self.X
					arr[2] = self.Y
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
				else:
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
			if POST['name'] == '3':
				if(self.search_walls(3) == 1):
					self.down()
					arr[0] = 1
					arr[1] = self.X
					arr[2] = self.Y
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
				else:
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")			
			if POST['name'] == '4':
				if(self.search_walls(4) == 1):
					self.up()
					arr[0] = 1
					arr[1] = self.X
					arr[2] = self.Y
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")		
				else:
					return HttpResponse (json.dumps(arr),
            							content_type="application/json")
			if POST['name'] == '5':
				if(self.flag == 1):
					slideX = -7
					slideY = 8
				if(self.flag == 2):
					slideX = 23
					slideY = 8
				if(self.flag == 3):
					slideX = 8
					slideY = 23
				if(self.flag == 4):
					slideX = 8
					slideY = -7
				arr[0] = 2
				arr[1] = self.X + slideX
				arr[2] = self.Y + slideY
				arr[3] = len(self.arrbullet)
				arr[4] = self.X
				arr[5] = self.Y
				arr[6] = self.flag
				newbullet = bullet(self.X + slideX, self.Y + slideY, self.flag, len(self.arrbullet))
				self.arrbullet.append(newbullet)
							
			return HttpResponse (json.dumps(arr), content_type="application/json")		
		else:
			return HttpResponse (json.dumps(arr), content_type="application/json")
